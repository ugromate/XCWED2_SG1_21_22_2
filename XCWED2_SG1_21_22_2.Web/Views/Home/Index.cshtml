@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to my Board Game Handler App</h1>

    <div id="boardgame-handler-app">
        <div class="button-container pb-3" style="text-align:center">
            <button class="btn btn-secondary" v-on:click="loadBoardGames">Load</button>
            <button class="btn btn-success" v-on:click="createBoardGame">Create</button>
            <button v-if="enabledBackToList" class="btn btn-secondary" v-on:click="backToList">Back to List</button>
        </div>
        <div id="content" style="display: flex; justify-content: center; flex-wrap: wrap;">
            <div v-if="errors.length > 0">
                <span v-for="msg in errors" style="color:red;font-weight:bold;">{{msg}}</span>
            </div>
            <div v-if="messages.lenght > 0">
                <span v-for="msg in messages" style="color:green;">{{msg}}</span>
            </div>
            <template v-if="operationMode == 0">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Min Player</th>
                            <th>Max Player</th>
                            <th>Min Age</th>
                            <th>Rating</th>
                            <th>Price</th>
                            <th>Designer ID</th>
                            <th>Publisher ID</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="boardGame in boardGames">
                            <td>{{boardGame.id}}</td>
                            <td>{{boardGame.name}}</td>
                            <td>{{boardGame.minPlayer}}</td>
                            <td>{{boardGame.maxPlayer}}</td>
                            <td>{{boardGame.minAge}}</td>
                            <td>{{boardGame.rating}}</td>
                            <td>{{boardGame.priceHUF}}</td>
                            <td>{{boardGame.designerID}}</td>
                            <td>{{boardGame.publisherID}}</td>
                            <td style="width:20%;text-align:right;">
                                <button class="btn btn-info" v-on:click="viewBoardGame(boardGame)">View</button>
                                <button class="btn btn-warning" v-on:click="editBoardGame(boardGame)">Edit</button>
                                <button class="btn btn-danger" v-on:click="editBoardGame(boardGame)">Delete</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </template>
            <template v-else-if="operationMode == 1">
                <view-component v-bind:boardGame="selectedBoardGame"></view-component>
            </template>
            <template v-else-if="operationMode == 2">
                <!--Create-->
                <editor-component v-on:saved="savedSuccessfully"
                                  v-on:cancelled="operationCancelled"></editor-component>
            </template>
            <template v-else>
                <!--Modify-->
                <editor-component v-bind:boardGame="selectedBoardGame"
                                  v-on:saved="savedSuccessfully"
                                   v-on:cancelled="operationCancelled"></editor-component>
            </template>
        </div>
    </div>
</div>

<script src="~/lib/vue/dist/vue.js"></script>
<script src="~/lib/axios/dist/axios.js"></script>

<script type="text/javascript">
    const axi = axios.create({
        baseURL: 'http://localhost:48914/api/BoardGame'
    });

    var boardgGameHandlerApp = new Vue({
        el: '#boardgame-handler-app',
        data: {
            boardGames: [],
            selectedBoardGame: {},
            operationMode: 0, //0-listing, 1-view, 2-create, 3-modify
            messages: [],
            errors: []
        },
        computed: {
            enabledBackToList() {
                return this.operationMode != 0;
            }
        },
        methods: {
            loadBoardGames() {
                axi.get('GetAll').then((response) => {
                    this.boardGames = response.data;
                    console.log(response.data);
                }).catch((err) => {
                    console.log(err);
                });
            },
            viewBoardGame: function (car) {
                this.selectedBoardGame = boardGame;
                this.operationMode = 1;
            },
            editBoardGame: function (car) {
                this.selectedBoardGame = boardGame;
                this.operationMode = 3
            },
            deleteBoardGame: function (car) {
                axi.delete('Delete/' + boardGame.id).then((response) => {
                    if (response.data.isSuccess) {
                        this.messages.push("BoardGame deleted successfully")
                        this.loadBoardGames();

                        setTimeout(() => { this.messages = []; }, 3000);
            }
            else {

            }
                })
            },
            createBoardGame: function () {
                this.operationMode = 2;
            }
        }
    })


</script>